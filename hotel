/*creating a goldusers_signup table*/

CREATE TABLE goldusers_signup
            (userid integer,
			 gold_signup_date date); 
/*inserting values into the table*/
INSERT INTO goldusers_signup(userid,gold_signup_date) 
 VALUES (1,'2017-09-22'),
        (3,'2017-04-21');
/*creating table users to the data base*/
drop table if exists users;
CREATE TABLE users(userid integer,signup_date date); 

INSERT INTO users(userid,signup_date) 
 VALUES   (1,'2014-09-02'),
          (2,'2015-01-15'),
           (3,'2014-04-11')
/*creating table sales to the zomato_data_analysis database*/
drop table if exists sales;
CREATE TABLE sales(userid integer,created_date date,product_id integer); 

INSERT INTO sales(userid,created_date,product_id) 
 VALUES (1,'2017-04-19',2),
(3,'2019-12-18',1),
(2,'2020-07-20',3),
(1,'12019-10-23',2),
(1,'2018-03-19',3),
(3,'2016-12-20',2),
(1,'2016-11-09',1),
(1,'2016-05-20',3),
(2,'02017-09-24',1),
(1,'2017-03-11',2),
(1,'2016-03-11',1),
(3,'2016-11-10',1),
(3,'2017-12-07',2),
(3,'2016-12-15',2),
(2,'2017-11-08',2),
(2,'2018-09-10',3);

/*creating table product to the database*/

drop table if exists product;
CREATE TABLE product(product_id integer,product_name text,price integer); 

INSERT INTO product(product_id,product_name,price) 
 VALUES
(1,'p1',980),
(2,'p2',870),
(3,'p3',330);
/*lets find out what is the total amount each customer spent on zomato?
for this joining two data tables sales and product*/
select*
from sales
select*
from product
select*
from goldusers_signup
select*
from users

select
a.userid,
sum(b.price)as total_amound_spend_by_the_user
from sales as a inner join product as b
on a.product_id=b.product_id
group by userid
/*lets find out how many days has each customer visited zomato*/
select userid,count(distinct created_date)as total_purchased_days
from sales
group by userid
/*lets find out the first product purchased by the customer*/
select*
from(select*,
rank()over(partition by userid
		   order by created_date)as rnk
from sales) a8
where rnk=1

/*lets find out most purchased item on the menu and how many times was it purchased by all customers*/


select product_id,
count (product_id) as total_no_product
from sales
group by product_id
order by total_no_product desc

/*which item was most popular for each of the customer*/
select*from(
select*,rank()over(partition by userid order by x desc)as rnk
from 
(select userid,product_id,
count(product_id) as x
from sales 
group by userid,product_id )as a)as b
where rnk=1
/*lets find out which item was purchased by the customer after they become a goldsignup member*/
/*lets join the table sales andgoldusers_signup*/
select*
from goldusers_signup

select*
from(select c.*,rank()over (partition by userid order by created_date) as rnk from
(select a.userid,a.created_date,a.product_id,b.gold_signup_date
from sales as a inner join goldusers_signup as b 
on a.userid=b.userid
where created_date>=gold_signup_date)as c)as d
where rnk=1

/*lets findout the item was purchased just before the customer become a member*/

 select*
from(select c.*,rank()over (partition by userid order by created_date desc) as rnk from
(select a.userid,a.created_date,a.product_id,b.gold_signup_date
from sales as a inner join goldusers_signup as b 
on a.userid=b.userid
where created_date<=gold_signup_date)as c)as d
where rnk=1

/*what is the total orders and amount spent for each member before they became a member*/



select userid,
count(created_date),
sum(price) from(select
c.*,
d.price
from
(select
a.userid,
a.created_date,
a.product_id,
b.gold_signup_date
from sales as a
INNER JOIN goldusers_signup as b
ON a.userid=b.userid
where created_date<gold_signup_date
order by userid)as c
inner join product as d 
on c.product_id= d.product_id)as e
group by userid
/*If buying each product gerates points for eg 5rs-2 zomato point and each product has different
purchasing points for eg for p1 5rs= 1 zomato point for p2 10rs-5zomato point and p3 5rs-1 zomato point
calculate points collected by each customers and for which product most points have been given till now*/

select userid,sum(total_points)*2.5 as total_money from
(select *,sum/points as total_points from(select*,case when product_id = 1 then 5  when product_id=2 
then 2 when product_id=3 then 5 else 0 
end as points
from
(select product_id,userid,
sum(price)
from
(select a.*,
b.price
from sales as a
inner join product as b
on a.product_id= b.product_id)as e
group by product_id,userid)as c)as f)as g
group by userid

/*lets find out the second part of the previous question 
"for which product most points have been given till now?"*/


select*,rank() over(order by total_money desc) from
(select product_id,sum(total_points)as total_money from
(select *,sum/points as total_points from(select*,case when product_id = 1 then 5  when product_id=2 
then 2 when product_id=3 then 5 else 0 
end as points
from
(select product_id,userid,
sum(price)
from
(select a.*,
b.price
from sales as a
inner join product as b
on a.product_id= b.product_id)as e
group by product_id,userid)as c)as f)as g
group by product_id)as k

/*In the first one year after a customer joins the gold program (including their join date) 
irrespective of what the customer has purchased they earn 5 zomato points for every 10 rs spent
who earned more more 1 or 3 and what was their points earnings in thier first yr?*/

select*
from sales
select*
from product
select*
from goldusers_signup
select*
from users
select d.*,
e.price/2 as total_points
from(select*
from
(select a.userid,a.created_date,a.product_id,b.gold_signup_date
from sales as a inner join goldusers_signup as b 
on a.userid=b.userid
where created_date>=gold_signup_date)as c
where created_date<= gold_signup_date+365)as d
inner join product as e
on d.product_id=e.product_id

/*rank all the transaction of the customer*/

select *,
rank() over(partition by userid order by created_date desc)as rnk
from sales












		 